" remote .vimrc

set nocompatible
syntax on
syntax enable
set number
set laststatus=2

set tabstop=4
set expandtab
set incsearch
set hlsearch
set wildmenu
set history=200
set ignorecase
set smartcase
au InsertEnter * set infercase
au InsertLeave * set ignorecase

" space is the best candidate for leader since it does virtually nothing by default
let mapleader = "\<space>"

" using a special register for the system clipboard is not working anymore
" on macOS for some odd reason.
" below are functions used to directly call the system clipboard instead:
" NOTE: the x register WILL get cluttered as a side effect
function! ClipboardYank()
  call system('pbcopy', @x)
endfunction

function! ClipboardPaste()
  let @x = system('pbpaste')
endfunction

" this mapping yanks the visually selected text into the system clipboard
vnoremap <silent> <leader>y "xy:call ClipboardYank()<CR>
" this mapping cuts the visually selected text into the system clipboard
vnoremap <silent> <leader>x "xd:call ClipboardYank()<CR>
" this mapping pastes the text from the system clipboard at the curent
" cursor position in normal mode
nnoremap <silent> <leader>p :call ClipboardPaste()<CR>"xp

nnoremap <silent> <C-l> :nohlsearch<CR>
xnoremap * :<C-u>call <SID>VSetSearch('/')<CR>/<C-R>=@/<CR><CR>
xnoremap # :<C-u>call <SID>VSetSearch('?')<CR>?<C-R>=@/<CR><CR>

function! s:VSetSearch(cmdtype)
  let temp = @s
  norm! gv"sy
  let @/ = '\V' . substitute(escape(@s, a:cmdtype.'\'), '\n', '\\n', 'g')
  let @s = temp
endfunction

nnoremap & :&&<CR>
xnoremap & :&&<CR>
